// <auto-generated />
using System;
using EidolonicBot;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EidolonicBot.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20250901153440_MigrateToLabelsDbSet")]
    partial class MigrateToLabelsDbSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:CollationDefinition:case_insensitive", "en-u-ks-primary,en-u-ks-primary,icu,False")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EidolonicBot.Models.LabelByChat", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<int>("MessageThreadId")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasMaxLength(66)
                        .HasColumnType("character varying(66)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ChatId", "MessageThreadId", "Address");

                    b.ToTable("LabelByChat");
                });

            modelBuilder.Entity("EidolonicBot.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(66)
                        .HasColumnType("character varying(66)")
                        .UseCollation("case_insensitive");

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("EidolonicBot.Models.SubscriptionByChat", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<int>("MessageThreadId")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("MinDelta")
                        .HasColumnType("numeric");

                    b.HasKey("ChatId", "MessageThreadId", "SubscriptionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionByChat");
                });

            modelBuilder.Entity("EidolonicBot.Models.SubscriptionByChat", b =>
                {
                    b.HasOne("EidolonicBot.Models.Subscription", "Subscription")
                        .WithMany("SubscriptionByChat")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EidolonicBot.Models.Subscription", b =>
                {
                    b.Navigation("SubscriptionByChat");
                });
#pragma warning restore 612, 618
        }
    }
}
