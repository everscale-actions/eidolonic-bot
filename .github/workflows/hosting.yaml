name: Hosting

on:
  push:
    paths:
      - .hosting/**
      - .github/workflows/hosting.yaml
    branches:
      - main
  schedule:
    - cron: '0 */4 * * *'
  workflow_run:
    workflows: [ CI ]
    types: [ completed ]
    branches: [ main ]
  workflow_dispatch:

env:
  HOSTING_PATH: .hosting

jobs:
  run-app:
    if: ${{ github.event.workflow_run == null || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.HOSTING_PATH }}
          sparse-checkout-cone-mode: false

      - name: Create .env file
        working-directory: ${{ env.HOSTING_PATH }}
        run: |
          cat <<EOT > .env
          Bot__Token=${{ secrets.BOT_TOKEN }}
          Wallet__SeedPhrase=${{ secrets.WALLET_SEED_PHRASE }}
          EverClient__Network__Endpoints__0=${{ secrets.NETWORK_ENDPOINT }}
          Serilog__WriteTo__NewRelicLogs__Args__licenseKey=${{ secrets.NEWRELIC_LICENCEKEY }}
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          ConnectionStrings__Postgres=${{ secrets.SUPABASE_CONNECTION_STRING }}
          AMQP_URI=${{ secrets.AMQP_URI }}
          EOT

      - name: Nx set SHAs
        id: setSHAs
        uses: nrwl/nx-set-shas@v4.1.1
        with:
          workflow-id: ci.yaml
          set-environment-variables-for-job: false

      - name: Run app
        working-directory: ${{ env.HOSTING_PATH }}
        run: |
          TAG=${{ steps.setSHAs.outputs.base }} docker compose up --pull=always

      - name: Logs to artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ${{ env.HOSTING_PATH }}/logs/**